---
title: "05 - Spring Boot and Rest API"
author: ProtossGP32
categories: [springboot, JPA, Rest API]
description: "A deeper explanation on Rest API usage"
date: 2023/03/07
---
# Introduction

# Rest API in Spring Boot

## `@RestController`
The Spring Boot annotation for the REST API controller. This annotation is responsible of converting the returned output to the expected plain-text format defined in the API documentation.

As with the `@Controller`, an endpoint is defined for this REST controller:

```{.java}
@RequestMapping("/path/to/api/endpoint")
```

Example:

```{.java}
@RequestMapping("/api/book")
```

## REST API services

Types of data that the REST methods will return:

- `ResponseEntity<T Entity>`: It's a container that includes the following data:
    - `HttpHeaders`: info regarding the API (i.e. version) as well as the operation confirmation
    - `Body` content: it stores the `Entity` or the collection of `Entity` that we want to return

## Additional tools
### Swagger
[_From official page:_](https://swagger.io/)

Swagger is a tool that tries to simplify API development.
Swagger isn't available as a Spring initializer dependency, so we have to install it via Maven Repository. [Follow this article](https://www.baeldung.com/swagger-2-documentation-for-spring-rest-api) for Swagger integration in your Java project. This article is related to Swagger 2, if you want to user v3 (also known as OpenAPI 3.0), [follow this other article](https://www.baeldung.com/spring-rest-openapi-documentation).

### Mockito
[_From official page:_](https://site.mockito.org/)

> Mockito is a mocking framework that tastes really good. It lets you write beautiful tests with a clean & simple API. [...] the tests are very readable and they produce clean verification errors.