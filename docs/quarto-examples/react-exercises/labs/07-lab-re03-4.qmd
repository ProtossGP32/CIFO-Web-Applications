---
title: "React JS: Lab#RE03-4"
categories: [React, Router, Hooks, API, axios, fetch, semantic, context, provider]
author: ProtossGP32
date: 2023/05/23
from: markdown+emoji
description: Developing a To-Do app with RESTful API integration, from monolith to several components and domains
---
# Introduction

- Class notes: [LINK](https://albertprofe.dev/reactjs/rjslab3-4.html)
- `useContext` class link: [LINK](https://albertprofe.dev/reactjs/reactjs-hook-context.html)
- `async` link: [LINK](https://albertprofe.dev/reactjs/reactjs-app-async.html)
- `useContext` hook link: [LINK](https://react.dev/reference/react/useContext)
- `createContext` API link: [LINK](https://react.dev/reference/react/createContext)

We'll pick up where we left off in the [Lab#RE03-3](./06-lab-re03-3.qmd). We'll refactor the ToDo application from a monolith into several components.

# Getting started
## Project creation
Create a new ReactJS project with the following dependencies:

- `react-router-dom`
- `semantic-ui-react` and `semantic-ui-css`
- `axios`
- `uuidv4` for UUID generation. [LINK](https://www.npmjs.com/package/uuidv4)

## Mock API creation
Go to [mockAPI](https://mockapi.io) and create a new API. Then, create several endpoints for each required transaction.

:::{.callout-warning}
## TODO: define them once the app is designed
:::

## Application design

:::{.callout-warning}
## TODO: Create a functional diagram of the application and pseudo-code
:::

# Layers
## Services
### TodoContext
### TodoService

## Components
### TodoList
### TodoAdd
### TodoApp